#!/bin/bash

usage() {
	echo "Usage: $0 <repo> <plugin> [<directory>]"
	exit 1
}

repo=$1
plugin=$2
directory=$3

[[ -z "$repo" ]] && usage
[[ -z "$plugin" ]] && usage

set -exo pipefail

case "$repo" in
	'plugin' | 'plugins' | 'mu-plugin' | 'mu-plugins')
		version=$(curl -s "https://api.wordpress.org/plugins/info/1.0/${plugin}.json" | jq -r .version)
		;;

	'theme' | 'themes')
		version=$(curl -s "http://api.wordpress.org/themes/info/1.2/?action=theme_information&request%5Bslug%5D=${plugin}" | jq -r .version)
		;;

	*)
		echo "Invalid operation ${repo}"
		exit 1
		;;
esac;

if [[ ! -z "$directory" ]]; then
	case "$directory" in
		'plugins')
			DIRECTORY=/var/www/wp-content/plugins
			;;
		'themes')
			DIRECTORY=/var/www/wp-content/themes
			;;
		'mu-plugins' | *)
			DIRECTORY=/var/www/wp-content/mu-plugins
			;;
	esac;
else
	case "$repo" in
		'plugin' | 'plugins')
			DIRECTORY=/var/www/wp-content/plugins
			;;
		'theme' | 'themes')
			DIRECTORY=/var/www/wp-content/themes
			;;
		'mu-plugin' | 'mu-plugins' | *)
			DIRECTORY=/var/www/wp-content/mu-plugins
			;;
	esac;
fi

mkdir -p "$DIRECTORY"

# download zip
# try latest version first, but fallback to trunk
curl -f "https://downloads.wordpress.org/${repo}/${plugin}.${version}.zip" \
	--output "${plugin}.zip" \
|| curl -f "https://downloads.wordpress.org/${repo}/${plugin}.zip" \
	--output "${plugin}.zip"

unzip "${plugin}.zip" -d "$DIRECTORY"

# Symlink main plugin file into mu-plugins directory
if [[ "$directory" == "mu-plugins" ]]; then
	cd /var/www/wp-content/mu-plugins

	if [[ -f "/var/www/wp-content/mu-plugins/${plugin}/${plugin}.php" ]]; then
		ln -s "${plugin}/${plugin}.php" .
	elif [[ -f "/var/www/wp-content/mu-plugins/${plugin}/plugin.php" ]]; then
		ln -s "${plugin}/plugin.php" "./${plugin}.php"
	elif [[ -f "/var/www/wp-content/mu-plugins/${plugin}/index.php" ]]; then
		ln -s "${plugin}/index.php" "./${plugin}.php"
	fi

	cd -
fi 

rm "${plugin}.zip"
